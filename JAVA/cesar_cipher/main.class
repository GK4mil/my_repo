import java.io.*;
import java.util.Scanner;

public class Main {
	public static void main(String args[]) {
		
		Scanner lok = new Scanner(System.in);
		System.out.println("Wpisz 1, aby szyfrowac caly katalog, \nlub 2, aby deszyfrowac caly katalog ...");
		
		Scanner lok1 = new Scanner(System.in);
		int choice = lok1.nextInt();

		System.out.println("Podaj lokalizacje folderu \nz plikami do szyfrowania ...");
		String lokalizacja = lok.nextLine(); // pobranie lokalizacji katalogu
		
		File katalog = new File(lokalizacja);
		String[] fileList = katalog.list();
		
		Cezar c = new Cezar();
		int j = 0;
		System.out.println("Zawartosc podanego katalogu: ");
		
		try {
			for (int i = 0; i < fileList.length; i++) { // do odczytu, wyswietla
				// zawartosc
				System.out.println(fileList[i]);
			}

		} catch (NullPointerException e) {
			System.out.println("Katalog nie istnieje");
			return;
			
		}

		// wyswietlenie katalogu
		int k = 0; // zmienna kodujaca
		
		System.out.println("Podaj klucz - liczba ca³kowita w typie int");
		k = lok.nextInt();
		
		if(k<0){
			k=Math.abs(k);
			if(choice==1)
				choice=2;
			else if(choice==2)
				choice=1;
		}

		for (int i = 0; i < fileList.length; i++) {

			File file = new File(lokalizacja + "\\" + fileList[i]);
			System.out.println("Odczyt zawartosci pliku o nazwie: " + fileList[i]);
			RandomAccessFile raf = null;

			try {
				raf = new RandomAccessFile(file, "r");
			} catch (FileNotFoundException e) {
				System.out.println("Plik nie istnieje");
				return;
			}

			String line = "";
			String[] tablicaTymczasowa = null;
			int l;

			try {
				j = 0;
				while ((line = raf.readLine()) != null) {
					j++;

					System.out.println(line);
				}
				raf.close();

				try {
					raf = new RandomAccessFile(file, "r");
				} catch (FileNotFoundException e) {
					System.out.println("Plik nie istnieje");
					return;
				}
				
				tablicaTymczasowa = new String[j];
				System.out.println("Po przeksztalceniu:");
				l = 0;
				
				while ((line = raf.readLine()) != null) {
					tablicaTymczasowa[l] = line;
					if (choice == 1)
						tablicaTymczasowa[l] = c.szyfruj(tablicaTymczasowa[l], k);
					if (choice == 2)
						tablicaTymczasowa[l] = c.deszyfruj(tablicaTymczasowa[l], k);
					System.out.println(tablicaTymczasowa[l]);

					l++;
				}
				raf.close();
			} catch (IOException e) {
				System.out.println("B³¹d");
			}
			
			file.delete();
			try {
				file.createNewFile();
			} catch (IOException e) {

				e.printStackTrace();
			}

			try {
				raf = new RandomAccessFile(file, "rw");
			} catch (FileNotFoundException e) {
				System.out.println("Nie mo¿na utworzyæ pliku.");
				return;
			}

			try {

				for (int z = 0; z < j; z++) {
					raf.writeBytes(tablicaTymczasowa[z] + (char) 10); // jak nie bedzie dzialac to zamienic na "\n"
				}

				raf.close();
			}

			catch (IOException e) {
				System.out.print("\nB³¹d zapisu");
				return;
			}

		}
	}
}